{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}



    <h1>Redovisning av kursmoment</h1>
    <p>Detta är redovisningssidan för kursen mvc, här finns samtliga redovisningstexter när kursen är klar.</p>


    <!-- Redovisningstext för kmom -->
    <section>
    <h2><a href="#kmom01">Kmom01</a></h2>
    <p>Reflektioner kring kursmoment 1:
Jag har tidigare erfarenhet av objektorienterad programmering (OOP) och har använt olika programmeringsspråk
som stödjer OOP, inklusive PHP. Jag har skapat klasser och objekt och jobbat med arv och gränssnitt i mina 
tidigare projekt.

PHP använder en klassbaserad modell för objektorienterad programmering. 
Objekt är instanser av klasser och kan skapas från klasser. Man kan använda nyckelordet "class" för
 att definiera en klass i PHP. För att komma igång och skapa sina första klasser i PHP behöver man
 förstå grundläggande begrepp som klasser, objekt, egenskaper (properties), metoder (methods), konstruktorer
(constructors) och instansiering (instantiation).


Koden och strukturen som användes till uppgiften me/report var välorganiserad och följde principerna för OOP. 
Klassen verkade ha klart definierade metoder och egenskaper, och använde namespace och encapsulation för att 
skydda data och begränsa åtkomsten till dem. 


I artikeln "PHP The Right Way" finns det flera intressanta och värdefulla delar. 
Jag fann avsnitten om autoloading, namespaces, och error handling särskilt intressanta och värdefulla. 
Autoloading är en effektiv metod för att automatiskt ladda klassfiler vid behov, vilket kan förbättra 
prestanda och underhållbarhet i större projekt. Namespaces är ett sätt att organisera koden och förhindra 
konflikter mellan olika delar av koden. Error handling är en viktig del av skrivandet av robust och felfri 
kod, och artikeln gav bra råd om olika sätt att hantera fel i PHP.

En annan intressant del av artikeln var avsnittet om databasåtkomst och användningen av PDO 
(PHP Data Objects) för att skydda mot SQL-injektion och förbättra säkerheten i databasåtkomsten. 
Jag vill gärna lära mig mer om hur man använder PDO korrekt för att skapa säker och effektiv 
databasåtkomst i PHP.

Sammanfattningsvis fann jag artikeln "PHP The Right Way" värdefull för att förstå bästa praxis och moderna 
metoder för att skriva objektorienterad PHP-kod. Autoloading, namespaces, error handling och säker 
databasåtkomst var några av de områden som jag fann särskilt intressanta och vill gärna utforska vidare.</p>
    </section>



    <!-- Redovisningstext för kmom -->
    <section>
    <h2><a href="#kmom02">Kmom02</a></h2>

    <p></p>
    </section>



    <!-- Redovisningstext för kmom -->
    <section>
    <h2><a href="#kmom03">Kmom03</a></h2>
    <p></p>
    </section>



    <!-- Redovisningstext för kmom -->
    <section>
    <h2><a href="#kmom04">Kmom04</a></h2>
    <p>
    </p>
    </section>



    <!-- Redovisningstext för kmom -->
    <section>
    <h2><a href="#kmom05">Kmom05</a></h2>
    <p></p>
    </section>



    <!-- Redovisningstext för kmom -->
    <section>
    <h2><a href="#kmom06">Kmom06</a></h2>
    <p></p>
    </section>

    <!-- Redovisningstext för kmom -->
    <section>
    <h2><a href="#kmom07-10">Kmom07-10</a></h2>
    </section>

{% endblock %}
